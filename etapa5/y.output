Terminals unused in grammar

   TOKEN_ERROR


State 115 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declist

    2 declist: dec declist
    3        | %empty

    4 dec: type TK_IDENTIFIER '=' lit ';'
    5    | type TK_IDENTIFIER '[' LIT_INTEGER ']' array_init ';'
    6    | type TK_IDENTIFIER '(' ')' cmd_list
    7    | type TK_IDENTIFIER '(' dec_param ')' cmd_list

    8 dec_param: type TK_IDENTIFIER dec_param2

    9 dec_param2: ',' dec_param
   10           | %empty

   11 cmd_list: cmd ';' cmd_list
   12         | %empty

   13 print: print ',' print_list
   14      | print_list

   15 print_list: LIT_STRING
   16           | exp

   17 cmd: TK_IDENTIFIER '=' exp
   18    | TK_IDENTIFIER '[' exp ']' '=' exp
   19    | KW_RETURN exp
   20    | KW_READ TK_IDENTIFIER
   21    | KW_PRINT print
   22    | block
   23    | ctrl_fluxo
   24    | %empty

   25 block: '{' cmd_list '}'

   26 ctrl_fluxo: KW_IF '(' exp ')' KW_THEN cmd
   27           | KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd
   28           | KW_LOOP '(' exp ')' cmd
   29           | KW_LEAP

   30 lit: LIT_INTEGER
   31    | LIT_FLOAT
   32    | LIT_CHAR

   33 type: KW_INT
   34     | KW_FLOAT
   35     | KW_BYTE

   36 array_init: ':' lit array_init2
   37           | %empty

   38 array_init2: lit array_init2
   39            | %empty

   40 exp: TK_IDENTIFIER
   41    | TK_IDENTIFIER '[' exp ']'
   42    | TK_IDENTIFIER '(' func_param ')'
   43    | '(' exp ')'
   44    | lit
   45    | exp '+' exp
   46    | exp '-' exp
   47    | exp '*' exp
   48    | exp '/' exp
   49    | exp OPERATOR_LE exp
   50    | exp OPERATOR_GE exp
   51    | exp OPERATOR_EQ exp
   52    | exp OPERATOR_DIF exp
   53    | exp OPERATOR_OR exp
   54    | exp OPERATOR_AND exp
   55    | exp OPERATOR_NOT exp
   56    | exp '>' exp
   57    | exp '<' exp

   58 func_param: exp func_param2
   59           | %empty

   60 func_param2: ',' func_param
   61            | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 7 26 27 28 42 43
')' (41) 6 7 26 27 28 42 43
'*' (42) 47
'+' (43) 45
',' (44) 9 13 60
'-' (45) 46
'/' (47) 48
':' (58) 36
';' (59) 4 5 11
'<' (60) 57
'=' (61) 4 17 18
'>' (62) 56
'[' (91) 5 18 41
']' (93) 5 18 41
'{' (123) 25
'}' (125) 25
error (256)
KW_BYTE (258) 35
KW_INT (259) 33
KW_FLOAT (260) 34
KW_IF (261) 26 27
KW_THEN (262) 26 27
KW_ELSE (263) 27
KW_LOOP (264) 28
KW_LEAP (265) 29
KW_READ (266) 20
KW_RETURN (267) 19
KW_PRINT (268) 21
OPERATOR_LE (269) 49
OPERATOR_GE (270) 50
OPERATOR_EQ (271) 51
OPERATOR_DIF (272) 52
OPERATOR_OR (273) 53
OPERATOR_AND (274) 54
OPERATOR_NOT (275) 55
TK_IDENTIFIER (276) 4 5 6 7 8 17 18 20 40 41 42
LIT_INTEGER (277) 5 30
LIT_FLOAT (278) 31
LIT_CHAR (279) 32
LIT_STRING (280) 15
TOKEN_ERROR (281)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
declist (45)
    on left: 2 3, on right: 1 2
dec (46)
    on left: 4 5 6 7, on right: 2
dec_param (47)
    on left: 8, on right: 7 9
dec_param2 (48)
    on left: 9 10, on right: 8
cmd_list (49)
    on left: 11 12, on right: 6 7 11 25
print (50)
    on left: 13 14, on right: 13 21
print_list (51)
    on left: 15 16, on right: 13 14
cmd (52)
    on left: 17 18 19 20 21 22 23 24, on right: 11 26 27 28
block (53)
    on left: 25, on right: 22
ctrl_fluxo (54)
    on left: 26 27 28 29, on right: 23
lit (55)
    on left: 30 31 32, on right: 4 36 38 44
type (56)
    on left: 33 34 35, on right: 4 5 6 7 8
array_init (57)
    on left: 36 37, on right: 5
array_init2 (58)
    on left: 38 39, on right: 36 38
exp (59)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57,
    on right: 16 17 18 19 26 27 28 41 43 45 46 47 48 49 50 51 52 53
    54 55 56 57 58
func_param (60)
    on left: 58 59, on right: 42 60
func_param2 (61)
    on left: 60 61, on right: 58


State 0

    0 $accept: . program $end

    KW_BYTE   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 3 (declist)

    program  go to state 4
    declist  go to state 5
    dec      go to state 6
    type     go to state 7


State 1

   35 type: KW_BYTE .

    $default  reduce using rule 35 (type)


State 2

   33 type: KW_INT .

    $default  reduce using rule 33 (type)


State 3

   34 type: KW_FLOAT .

    $default  reduce using rule 34 (type)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 8


State 5

    1 program: declist .

    $default  reduce using rule 1 (program)


State 6

    2 declist: dec . declist

    KW_BYTE   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 3 (declist)

    declist  go to state 9
    dec      go to state 6
    type     go to state 7


State 7

    4 dec: type . TK_IDENTIFIER '=' lit ';'
    5    | type . TK_IDENTIFIER '[' LIT_INTEGER ']' array_init ';'
    6    | type . TK_IDENTIFIER '(' ')' cmd_list
    7    | type . TK_IDENTIFIER '(' dec_param ')' cmd_list

    TK_IDENTIFIER  shift, and go to state 10


State 8

    0 $accept: program $end .

    $default  accept


State 9

    2 declist: dec declist .

    $default  reduce using rule 2 (declist)


State 10

    4 dec: type TK_IDENTIFIER . '=' lit ';'
    5    | type TK_IDENTIFIER . '[' LIT_INTEGER ']' array_init ';'
    6    | type TK_IDENTIFIER . '(' ')' cmd_list
    7    | type TK_IDENTIFIER . '(' dec_param ')' cmd_list

    '='  shift, and go to state 11
    '['  shift, and go to state 12
    '('  shift, and go to state 13


State 11

    4 dec: type TK_IDENTIFIER '=' . lit ';'

    LIT_INTEGER  shift, and go to state 14
    LIT_FLOAT    shift, and go to state 15
    LIT_CHAR     shift, and go to state 16

    lit  go to state 17


State 12

    5 dec: type TK_IDENTIFIER '[' . LIT_INTEGER ']' array_init ';'

    LIT_INTEGER  shift, and go to state 18


State 13

    6 dec: type TK_IDENTIFIER '(' . ')' cmd_list
    7    | type TK_IDENTIFIER '(' . dec_param ')' cmd_list

    KW_BYTE   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3
    ')'       shift, and go to state 19

    dec_param  go to state 20
    type       go to state 21


State 14

   30 lit: LIT_INTEGER .

    $default  reduce using rule 30 (lit)


State 15

   31 lit: LIT_FLOAT .

    $default  reduce using rule 31 (lit)


State 16

   32 lit: LIT_CHAR .

    $default  reduce using rule 32 (lit)


State 17

    4 dec: type TK_IDENTIFIER '=' lit . ';'

    ';'  shift, and go to state 22


State 18

    5 dec: type TK_IDENTIFIER '[' LIT_INTEGER . ']' array_init ';'

    ']'  shift, and go to state 23


State 19

    6 dec: type TK_IDENTIFIER '(' ')' . cmd_list

    KW_IF          shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_LEAP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    KW_PRINT       shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 31

    ';'       reduce using rule 24 (cmd)
    $default  reduce using rule 12 (cmd_list)

    cmd_list    go to state 32
    cmd         go to state 33
    block       go to state 34
    ctrl_fluxo  go to state 35


State 20

    7 dec: type TK_IDENTIFIER '(' dec_param . ')' cmd_list

    ')'  shift, and go to state 36


State 21

    8 dec_param: type . TK_IDENTIFIER dec_param2

    TK_IDENTIFIER  shift, and go to state 37


State 22

    4 dec: type TK_IDENTIFIER '=' lit ';' .

    $default  reduce using rule 4 (dec)


State 23

    5 dec: type TK_IDENTIFIER '[' LIT_INTEGER ']' . array_init ';'

    ':'  shift, and go to state 38

    $default  reduce using rule 37 (array_init)

    array_init  go to state 39


State 24

   26 ctrl_fluxo: KW_IF . '(' exp ')' KW_THEN cmd
   27           | KW_IF . '(' exp ')' KW_THEN cmd KW_ELSE cmd

    '('  shift, and go to state 40


State 25

   28 ctrl_fluxo: KW_LOOP . '(' exp ')' cmd

    '('  shift, and go to state 41


State 26

   29 ctrl_fluxo: KW_LEAP .

    $default  reduce using rule 29 (ctrl_fluxo)


State 27

   20 cmd: KW_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 42


State 28

   19 cmd: KW_RETURN . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 46


State 29

   21 cmd: KW_PRINT . print

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_STRING     shift, and go to state 47
    '('            shift, and go to state 44

    print       go to state 48
    print_list  go to state 49
    lit         go to state 45
    exp         go to state 50


State 30

   17 cmd: TK_IDENTIFIER . '=' exp
   18    | TK_IDENTIFIER . '[' exp ']' '=' exp

    '='  shift, and go to state 51
    '['  shift, and go to state 52


State 31

   25 block: '{' . cmd_list '}'

    KW_IF          shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_LEAP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    KW_PRINT       shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 31

    ';'       reduce using rule 24 (cmd)
    $default  reduce using rule 12 (cmd_list)

    cmd_list    go to state 53
    cmd         go to state 33
    block       go to state 34
    ctrl_fluxo  go to state 35


State 32

    6 dec: type TK_IDENTIFIER '(' ')' cmd_list .

    $default  reduce using rule 6 (dec)


State 33

   11 cmd_list: cmd . ';' cmd_list

    ';'  shift, and go to state 54


State 34

   22 cmd: block .

    $default  reduce using rule 22 (cmd)


State 35

   23 cmd: ctrl_fluxo .

    $default  reduce using rule 23 (cmd)


State 36

    7 dec: type TK_IDENTIFIER '(' dec_param ')' . cmd_list

    KW_IF          shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_LEAP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    KW_PRINT       shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 31

    ';'       reduce using rule 24 (cmd)
    $default  reduce using rule 12 (cmd_list)

    cmd_list    go to state 55
    cmd         go to state 33
    block       go to state 34
    ctrl_fluxo  go to state 35


State 37

    8 dec_param: type TK_IDENTIFIER . dec_param2

    ','  shift, and go to state 56

    $default  reduce using rule 10 (dec_param2)

    dec_param2  go to state 57


State 38

   36 array_init: ':' . lit array_init2

    LIT_INTEGER  shift, and go to state 14
    LIT_FLOAT    shift, and go to state 15
    LIT_CHAR     shift, and go to state 16

    lit  go to state 58


State 39

    5 dec: type TK_IDENTIFIER '[' LIT_INTEGER ']' array_init . ';'

    ';'  shift, and go to state 59


State 40

   26 ctrl_fluxo: KW_IF '(' . exp ')' KW_THEN cmd
   27           | KW_IF '(' . exp ')' KW_THEN cmd KW_ELSE cmd

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 60


State 41

   28 ctrl_fluxo: KW_LOOP '(' . exp ')' cmd

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 61


State 42

   20 cmd: KW_READ TK_IDENTIFIER .

    $default  reduce using rule 20 (cmd)


State 43

   40 exp: TK_IDENTIFIER .
   41    | TK_IDENTIFIER . '[' exp ']'
   42    | TK_IDENTIFIER . '(' func_param ')'

    '['  shift, and go to state 62
    '('  shift, and go to state 63

    $default  reduce using rule 40 (exp)


State 44

   43 exp: '(' . exp ')'

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 64


State 45

   44 exp: lit .

    $default  reduce using rule 44 (exp)


State 46

   19 cmd: KW_RETURN exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    OPERATOR_OR   shift, and go to state 69
    OPERATOR_AND  shift, and go to state 70
    OPERATOR_NOT  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 19 (cmd)


State 47

   15 print_list: LIT_STRING .

    $default  reduce using rule 15 (print_list)


State 48

   13 print: print . ',' print_list
   21 cmd: KW_PRINT print .

    ','  shift, and go to state 78

    $default  reduce using rule 21 (cmd)


State 49

   14 print: print_list .

    $default  reduce using rule 14 (print)


State 50

   16 print_list: exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    OPERATOR_OR   shift, and go to state 69
    OPERATOR_AND  shift, and go to state 70
    OPERATOR_NOT  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 16 (print_list)


State 51

   17 cmd: TK_IDENTIFIER '=' . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 79


State 52

   18 cmd: TK_IDENTIFIER '[' . exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 80


State 53

   25 block: '{' cmd_list . '}'

    '}'  shift, and go to state 81


State 54

   11 cmd_list: cmd ';' . cmd_list

    KW_IF          shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_LEAP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    KW_PRINT       shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 31

    ';'       reduce using rule 24 (cmd)
    $default  reduce using rule 12 (cmd_list)

    cmd_list    go to state 82
    cmd         go to state 33
    block       go to state 34
    ctrl_fluxo  go to state 35


State 55

    7 dec: type TK_IDENTIFIER '(' dec_param ')' cmd_list .

    $default  reduce using rule 7 (dec)


State 56

    9 dec_param2: ',' . dec_param

    KW_BYTE   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    dec_param  go to state 83
    type       go to state 21


State 57

    8 dec_param: type TK_IDENTIFIER dec_param2 .

    $default  reduce using rule 8 (dec_param)


State 58

   36 array_init: ':' lit . array_init2

    LIT_INTEGER  shift, and go to state 14
    LIT_FLOAT    shift, and go to state 15
    LIT_CHAR     shift, and go to state 16

    $default  reduce using rule 39 (array_init2)

    lit          go to state 84
    array_init2  go to state 85


State 59

    5 dec: type TK_IDENTIFIER '[' LIT_INTEGER ']' array_init ';' .

    $default  reduce using rule 5 (dec)


State 60

   26 ctrl_fluxo: KW_IF '(' exp . ')' KW_THEN cmd
   27           | KW_IF '(' exp . ')' KW_THEN cmd KW_ELSE cmd
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    OPERATOR_OR   shift, and go to state 69
    OPERATOR_AND  shift, and go to state 70
    OPERATOR_NOT  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77
    ')'           shift, and go to state 86


State 61

   28 ctrl_fluxo: KW_LOOP '(' exp . ')' cmd
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    OPERATOR_OR   shift, and go to state 69
    OPERATOR_AND  shift, and go to state 70
    OPERATOR_NOT  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77
    ')'           shift, and go to state 87


State 62

   41 exp: TK_IDENTIFIER '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 88


State 63

   42 exp: TK_IDENTIFIER '(' . func_param ')'

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    $default  reduce using rule 59 (func_param)

    lit         go to state 45
    exp         go to state 89
    func_param  go to state 90


State 64

   43 exp: '(' exp . ')'
   45    | exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    OPERATOR_OR   shift, and go to state 69
    OPERATOR_AND  shift, and go to state 70
    OPERATOR_NOT  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77
    ')'           shift, and go to state 91


State 65

   49 exp: exp OPERATOR_LE . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 92


State 66

   50 exp: exp OPERATOR_GE . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 93


State 67

   51 exp: exp OPERATOR_EQ . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 94


State 68

   52 exp: exp OPERATOR_DIF . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 95


State 69

   53 exp: exp OPERATOR_OR . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 96


State 70

   54 exp: exp OPERATOR_AND . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 97


State 71

   55 exp: exp OPERATOR_NOT . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 98


State 72

   57 exp: exp '<' . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 99


State 73

   56 exp: exp '>' . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 100


State 74

   46 exp: exp '-' . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 101


State 75

   45 exp: exp '+' . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 102


State 76

   48 exp: exp '/' . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 103


State 77

   47 exp: exp '*' . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 104


State 78

   13 print: print ',' . print_list

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_STRING     shift, and go to state 47
    '('            shift, and go to state 44

    print_list  go to state 105
    lit         go to state 45
    exp         go to state 50


State 79

   17 cmd: TK_IDENTIFIER '=' exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    OPERATOR_OR   shift, and go to state 69
    OPERATOR_AND  shift, and go to state 70
    OPERATOR_NOT  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 17 (cmd)


State 80

   18 cmd: TK_IDENTIFIER '[' exp . ']' '=' exp
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    OPERATOR_OR   shift, and go to state 69
    OPERATOR_AND  shift, and go to state 70
    OPERATOR_NOT  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77
    ']'           shift, and go to state 106


State 81

   25 block: '{' cmd_list '}' .

    $default  reduce using rule 25 (block)


State 82

   11 cmd_list: cmd ';' cmd_list .

    $default  reduce using rule 11 (cmd_list)


State 83

    9 dec_param2: ',' dec_param .

    $default  reduce using rule 9 (dec_param2)


State 84

   38 array_init2: lit . array_init2

    LIT_INTEGER  shift, and go to state 14
    LIT_FLOAT    shift, and go to state 15
    LIT_CHAR     shift, and go to state 16

    $default  reduce using rule 39 (array_init2)

    lit          go to state 84
    array_init2  go to state 107


State 85

   36 array_init: ':' lit array_init2 .

    $default  reduce using rule 36 (array_init)


State 86

   26 ctrl_fluxo: KW_IF '(' exp ')' . KW_THEN cmd
   27           | KW_IF '(' exp ')' . KW_THEN cmd KW_ELSE cmd

    KW_THEN  shift, and go to state 108


State 87

   28 ctrl_fluxo: KW_LOOP '(' exp ')' . cmd

    KW_IF          shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_LEAP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    KW_PRINT       shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 31

    $default  reduce using rule 24 (cmd)

    cmd         go to state 109
    block       go to state 34
    ctrl_fluxo  go to state 35


State 88

   41 exp: TK_IDENTIFIER '[' exp . ']'
   45    | exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    OPERATOR_OR   shift, and go to state 69
    OPERATOR_AND  shift, and go to state 70
    OPERATOR_NOT  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77
    ']'           shift, and go to state 110


State 89

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp
   58 func_param: exp . func_param2

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    OPERATOR_OR   shift, and go to state 69
    OPERATOR_AND  shift, and go to state 70
    OPERATOR_NOT  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77
    ','           shift, and go to state 111

    $default  reduce using rule 61 (func_param2)

    func_param2  go to state 112


State 90

   42 exp: TK_IDENTIFIER '(' func_param . ')'

    ')'  shift, and go to state 113


State 91

   43 exp: '(' exp ')' .

    $default  reduce using rule 43 (exp)


State 92

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   49    | exp OPERATOR_LE exp .
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 49 (exp)


State 93

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   50    | exp OPERATOR_GE exp .
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 50 (exp)


State 94

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   51    | exp OPERATOR_EQ exp .
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    '-'  shift, and go to state 74
    '+'  shift, and go to state 75
    '/'  shift, and go to state 76
    '*'  shift, and go to state 77

    $default  reduce using rule 51 (exp)


State 95

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   52    | exp OPERATOR_DIF exp .
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    '-'  shift, and go to state 74
    '+'  shift, and go to state 75
    '/'  shift, and go to state 76
    '*'  shift, and go to state 77

    $default  reduce using rule 52 (exp)


State 96

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   53    | exp OPERATOR_OR exp .
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 53 (exp)


State 97

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   54    | exp OPERATOR_AND exp .
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 54 (exp)


State 98

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   55    | exp OPERATOR_NOT exp .
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 55 (exp)


State 99

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp
   57    | exp '<' exp .

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 57 (exp)


State 100

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   56    | exp '>' exp .
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 56 (exp)


State 101

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   46    | exp '-' exp .
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    '/'  shift, and go to state 76
    '*'  shift, and go to state 77

    $default  reduce using rule 46 (exp)


State 102

   45 exp: exp . '+' exp
   45    | exp '+' exp .
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    '/'  shift, and go to state 76
    '*'  shift, and go to state 77

    $default  reduce using rule 45 (exp)


State 103

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   48    | exp '/' exp .
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    $default  reduce using rule 48 (exp)


State 104

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   47    | exp '*' exp .
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    $default  reduce using rule 47 (exp)


State 105

   13 print: print ',' print_list .

    $default  reduce using rule 13 (print)


State 106

   18 cmd: TK_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 114


State 107

   38 array_init2: lit array_init2 .

    $default  reduce using rule 38 (array_init2)


State 108

   26 ctrl_fluxo: KW_IF '(' exp ')' KW_THEN . cmd
   27           | KW_IF '(' exp ')' KW_THEN . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_LEAP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    KW_PRINT       shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 31

    $default  reduce using rule 24 (cmd)

    cmd         go to state 115
    block       go to state 34
    ctrl_fluxo  go to state 35


State 109

   28 ctrl_fluxo: KW_LOOP '(' exp ')' cmd .

    $default  reduce using rule 28 (ctrl_fluxo)


State 110

   41 exp: TK_IDENTIFIER '[' exp ']' .

    $default  reduce using rule 41 (exp)


State 111

   60 func_param2: ',' . func_param

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    $default  reduce using rule 59 (func_param)

    lit         go to state 45
    exp         go to state 89
    func_param  go to state 116


State 112

   58 func_param: exp func_param2 .

    $default  reduce using rule 58 (func_param)


State 113

   42 exp: TK_IDENTIFIER '(' func_param ')' .

    $default  reduce using rule 42 (exp)


State 114

   18 cmd: TK_IDENTIFIER '[' exp ']' '=' . exp

    TK_IDENTIFIER  shift, and go to state 43
    LIT_INTEGER    shift, and go to state 14
    LIT_FLOAT      shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    '('            shift, and go to state 44

    lit  go to state 45
    exp  go to state 117


State 115

   26 ctrl_fluxo: KW_IF '(' exp ')' KW_THEN cmd .
   27           | KW_IF '(' exp ')' KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 118

    KW_ELSE   [reduce using rule 26 (ctrl_fluxo)]
    $default  reduce using rule 26 (ctrl_fluxo)


State 116

   60 func_param2: ',' func_param .

    $default  reduce using rule 60 (func_param2)


State 117

   18 cmd: TK_IDENTIFIER '[' exp ']' '=' exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_DIF exp
   53    | exp . OPERATOR_OR exp
   54    | exp . OPERATOR_AND exp
   55    | exp . OPERATOR_NOT exp
   56    | exp . '>' exp
   57    | exp . '<' exp

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_DIF  shift, and go to state 68
    OPERATOR_OR   shift, and go to state 69
    OPERATOR_AND  shift, and go to state 70
    OPERATOR_NOT  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '-'           shift, and go to state 74
    '+'           shift, and go to state 75
    '/'           shift, and go to state 76
    '*'           shift, and go to state 77

    $default  reduce using rule 18 (cmd)


State 118

   27 ctrl_fluxo: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_LEAP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    KW_PRINT       shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 31

    $default  reduce using rule 24 (cmd)

    cmd         go to state 119
    block       go to state 34
    ctrl_fluxo  go to state 35


State 119

   27 ctrl_fluxo: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 27 (ctrl_fluxo)
